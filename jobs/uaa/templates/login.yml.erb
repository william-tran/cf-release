---
name: login

<%
  config_artifacts_path = "/var/vcap/jobs/login/config/security"
%>

logging:
  config: /var/vcap/jobs/login/config/log4j.properties

<%
  # The login secret is defined in one of two properties
  # uaa.login.client_secret or uaa.clients.login.secret
  # If both of these are defined, then use the latter
  if properties.uaa && properties.uaa.clients && properties.uaa.clients.login && properties.uaa.clients.login.secret
    login_secret = properties.uaa.clients.login.secret
  elsif properties.uaa && properties.uaa.login && properties.uaa.login.client_secret
    login_secret = properties.uaa.login.client_secret
  else
    raise ArgumentError, 'uaa.login.client_secret or uaa.clients.login.secret must be set.'
  end
%>

<% protocol = (properties.login && properties.login.protocol) ? properties.login.protocol : "http" %>
<% if !properties.login || !properties.login.uaa_base
  # Fix this to https when SSL certs are working in dev and staging
  uaa_base = "#{protocol}://uaa.#{properties.domain}"
else
  uaa_base = properties.login.uaa_base
end %>
uaa:
  url: <%= uaa_base %>
  token:
    url: <%= uaa_base %>/oauth/token
  login:
    url: <%= uaa_base %>/authenticate
  clientinfo:
    url: <%= uaa_base %>/clientinfo
  approvals:
    url: <%= uaa_base %>/approvals
<% if properties.login and properties.login.links then %>
links: <% properties.login.links.marshal_dump.each do |id,url| %>
  <%= id %>: <%= url %><% end %>
<% end %>
<% if properties.login and properties.login.smtp then %>
smtp: <% properties.login.smtp.marshal_dump.each do |key,val| %>
  <%= key %>: <%= val %><% end %>
<% end %>
<% if properties.login and properties.login.tiles then %>
tiles: <% properties.login.tiles.each do |tile| %>
- <% tile.marshal_dump.each do |key,val| %><%= key %>: <%= val %>
  <% end %>
<% end %>
<% end %>

# The secret that this login server will use to authenticate to the uaa
LOGIN_SECRET: <%= login_secret %>
<% if !properties.uaa.require_https.nil? %>
require_https: <%= properties.uaa.require_https %>
<% end %>
<% if !properties.uaa.dump_requests.nil? %>
dump_requests: <%= properties.uaa.dump_requests %>
<% end %>

<% if properties.login && properties.login.asset_base_url %>
assetBaseUrl: <%= properties.login.asset_base_url %>
<% end %>

<% if properties.login.notifications && properties.login.notifications.url %>
notifications:
  url: <%= properties.login.notifications.url %>
<% end %>

login:
  brand: <%= (properties.login && properties.login.brand) ? properties.login.brand : "oss" %>
  url: <%= "#{protocol}://login.#{properties.domain}" %>
  entityBaseURL: <%= "#{protocol}://login.#{properties.domain}" %>
  entityID: <%= (properties.login && properties.login.saml.entityid) ? properties.login.saml.entityid : properties.login.entity_id ? properties.login.entity_id : "login.#{properties.domain}" %>
  <% if !properties.login.invitations_enabled.nil? %>
  invitationsEnabled: <%= properties.login.invitations_enabled %>
  <% end %>
<% if properties.login.saml %>
  <% if !properties.login.saml.serviceProviderCertificate.nil? %>
  serviceProviderCertificate: | 
    <%= p("login.saml.serviceProviderCertificate").gsub("\n", "\n    ")%>
  <% else %>
  serviceProviderCertificate: | 
    -----BEGIN CERTIFICATE-----
    MIIC6TCCAlICCQDN85uMN+4K5jANBgkqhkiG9w0BAQsFADCBuDELMAkGA1UEBhMC
    VVMxCzAJBgNVBAgMAkNBMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMR0wGwYDVQQK
    DBRQaXZvdGFsIFNvZnR3YXJlIEluYzEeMBwGA1UECwwVQ2xvdWRmb3VuZHJ5IElk
    ZW50aXR5MRswGQYDVQQDDBJ1YWEucnVuLnBpdm90YWwuaW8xKDAmBgkqhkiG9w0B
    CQEWGXZjYXAtZGV2QGNsb3VkZm91bmRyeS5vcmcwHhcNMTUwMzAyMTQyMDQ4WhcN
    MjUwMjI3MTQyMDQ4WjCBuDELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRYwFAYD
    VQQHDA1TYW4gRnJhbmNpc2NvMR0wGwYDVQQKDBRQaXZvdGFsIFNvZnR3YXJlIElu
    YzEeMBwGA1UECwwVQ2xvdWRmb3VuZHJ5IElkZW50aXR5MRswGQYDVQQDDBJ1YWEu
    cnVuLnBpdm90YWwuaW8xKDAmBgkqhkiG9w0BCQEWGXZjYXAtZGV2QGNsb3VkZm91
    bmRyeS5vcmcwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAN0u5J4BJUDgRv6I
    h5/r7rZjSrFVLL7bl71CzBIaVk1BQPYfBC8gggGAWmYYxJV0Kz+2Vx0Z96OnXhJk
    gG46Zo2KMDudEeSdXou+dSBNISDv4VpLKUGnVU4n/L0khbI+jX51aS80ub8vThca
    bkdY5x4Ir8G3QCQvCGKgU2emfFe7AgMBAAEwDQYJKoZIhvcNAQELBQADgYEAXghg
    PwMhO0+dASJ83e2Bu63pKO808BrVjD51sSEMb0qwFc5IV6RzK/mkJgO0fphhoqOm
    ZLzGcSYwCmj0Vc0GO5NgnFVZg4N9CyYCpDMeQynumlrNhRgnZRzlqXtQgL2bQDiu
    coxNL/KY05iVlE1bmq/fzNEmEi2zf3dQV8CNSYs=
    -----END CERTIFICATE----
  <% end %>
  <% if !properties.login.saml.serviceProviderKey.nil? %>
  serviceProviderKey: | 
    <%= p("login.saml.serviceProviderKey").gsub("\n", "\n    ")%>
  <% else %>
  serviceProviderKey: | 
    -----BEGIN RSA PRIVATE KEY-----
    Proc-Type: 4,ENCRYPTED
    DEK-Info: DES-EDE3-CBC,BE03AC562D734AB1

    mvMS20ddwCJ6A+ABJKWViGTgLpWUVA5ZqKYU6Q3N+le769s4uygcMOtvTcjgH46E
    3gIDR+Qt+UO/Yv+EgIJnga+vLMayjg/pl2bR8p1lK7gUkAb7DwDviySSi18tAt0O
    NTyJEzy6G+WnlSs+3tzRUCneaoFB1/LDdUSOzaSLRtU/r+Vt/9BYBQbZMalnSQRE
    U17VhISbfj4MgNIfZU+7+ALfE0+Muno4WDk+IJXArAk7wckF6NO7M4EKHlLzrHI0
    +PccNBKN/rAevYZrZOmGCw4jKu5JJDtt6SgQJIp/XGEZlv+KD2cWPBC4nj7nJHAz
    ezt9SfnL8jQlClTwQyPHjwDPlL/WHQrBpxpFF83FnN8B02DWwXQE2oTC7RtijQVT
    NKto/vSODK0RfaulLHNx6RvJF0YFWSSofTm0G5TLwWCCrVekK0N5zAYPeG9LgjlG
    4xILPSE+Y6hYIVN2gXNZOVB8T5O+Jf1KQlmMnZ9A5o1gcUJq0rCBa6i2D2rveQGE
    eLm3BgyMp5v0JsyuzDBuxVWSgJFt+KHz/mhdgdG8End3QBF2BBaHpLP0+5BqIZHX
    NYCDBwWK/k40oxT8KLdFfkBU48Yndq7ARFdq3YzPU6FdSpgwZM5p8HYkl1THcskI
    Ri7zVHxpm0tPZqqqgzr6HBvSiQhACT4dOXV5V8bEoL5tlyuZllq2MBayl9yd0+bq
    6hVZXUYewtPyE2Wj2PDr2F7fGtYhKcrnQxH63w3OhIzgkxUTQ63h710QDJjOtYCm
    /PCAsNBePrnjrHHxMxkMVCtTYSeBePk0vkUtFOE5hIc=
    -----END RSA PRIVATE KEY-----
  <% end %>
  serviceProviderKeyPassword: <%= properties.login.saml.serviceProviderKeyPassword ? properties.login.saml.serviceProviderKeyPassword : 'password' %>
  <% if !properties.login.self_service_links_enabled.nil? || !properties.login.signups_enabled.nil? %>
  selfServiceLinksEnabled: <%= properties.login.self_service_links_enabled.nil? ? properties.login.signups_enabled : properties.login.self_service_links_enabled %>
  <% end %>
  saml:
    providers: <% if properties.login.saml.providers then properties.login.saml.providers.marshal_dump.reject {|k,_| k.to_s == ''}.each do |idpAlias,idpProvider| %>
      <%= idpAlias %>: <% idpProvider.marshal_dump.reject {|k,_| ["idpMetadata", "idpMetadataXML", "idpMetadataURL"].include?(k.to_s)}.each do |key,value|%>
        <%= key %>: <%= value.is_a?(String) && value.match("\n") ? "| \n          " + value.gsub("\n", "\n          ") + "" : value %><% end %>
        idpMetadata: <%= (idpProvider.idpMetadataURL || idpProvider.idpMetadataXML || idpProvider.idpMetadata).inspect %><% end %><% end %><% if properties.login.saml.idpEntityAlias && (properties.login.saml.idpMetadataURL || properties.login.saml.idp_metadata_file) %>
      <%= properties.login.saml.idpEntityAlias %>: 
        idpMetadata: <%= properties.login.saml.idpMetadataURL ? properties.login.saml.idpMetadataURL : "/var/vcap/jobs/login/" + properties.login.saml.idp_metadata_file %>
        assertionConsumerIndex: <%= (properties.login && properties.login.saml.assertionConsumerIndex) ? properties.login.saml.assertionConsumerIndex : 1 %>
        nameID: <%= (properties.login && properties.login.saml.nameidFormat) ? properties.login.saml.nameidFormat : "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress" %>
        metadataTrustCheck: <%= (properties.login.saml.metadataTrustCheck ? properties.login.saml.metadataTrustCheck : true) %>
        showSamlLoginLink: true
        linkText: 'Use your corporate credentials'
    <% end %>
    socket:
      connectionManagerTimeout: <%= properties.login.saml.socket.connectionManagerTimeout.nil? ? 10000 : properties.login.saml.socket.connectionManagerTimeout %>
      soTimeout: <%= properties.login.saml.socket.soTimeout.nil? ? 10000 : properties.login.saml.socket.soTimeout %>
<% end %>
  authorize:
    url: <%= "#{protocol}://login.#{properties.domain}/oauth/authorize" %>
    
<% if properties.login.analytics && properties.login.analytics.code && properties.login.analytics.domain %>
analytics:
  code: <%= properties.login.analytics.code %>
  domain: <%= properties.login.analytics.domain %>
<% end %>
